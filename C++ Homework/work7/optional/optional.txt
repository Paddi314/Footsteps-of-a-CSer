
2.	选做题
	时钟-闹钟类
在时钟类Clock的基础上派生闹钟类AlarmClock
（1）时钟类Clock
Clock类设计如下，请实现成员函数。
class  Clock
{ private: 
   	int _h,_m,_s;		//24小时制的时间数据
 public: 
   	Clock(int hour, int minute, int second);		
   	void Show() const;				//显示时间功能
	void Tick();					//计时功能，每一次Tick，时间向前走1秒
	void Set(int h, int m, int s);		//重新设定时间值
 };
（2）闹钟类AlarmClock
功能基本要求：
闹钟类继承时钟类，闹钟的功能包括计时和闹铃。
	设计AlarmClock(闹钟)类：
a) 增加表示闹铃时间的数据成员，闹铃时间精确到小时 : 分钟；
b) 构造函数构造新闹钟对象，初始化时钟时间和闹铃时间；
c) 成员函数Alarm()的功能是：当闹铃时间到时，增加实际的声音效果“嘀嘀嘀……”；
d) 成员函数SetAlarmTime(…)用来重新设置闹铃的时间值；
（3）主程序
使用AlarmClock类
a)创建AlarmClock类的对象，给它初始时间值（比如：23：59：30），闹铃时间值（比如： 00：01 表示0点1分）和它要走的时长（比如：2分15秒），发出启动命令后，让它一秒一秒地走起来，并且显示它的每个时间值（包含时：分：秒）
b)当到达闹铃时间时，增加实际的声音效果“嘀嘀嘀……”。
c)等到预订的时长完成时，输出计时结束信息
d)以上的计时过程可以重复多次
（4）输入输出样例：
请输入初始时间（时 分 秒）：23 59 45
请输入闹铃时间（时 分）  ：0 1 
请输入计时时长（分 秒）  ：2 30
23:59:45		//（这里在相同的位置显示从23时59分45秒到0时2分15秒）
			//(其中，在00:01:00到00:01:59期间，增加声音“嘀嘀嘀......”	)
计时结束，还要继续吗（Y/N）？Y
请输入初始时间（时 分 秒）：2 5 3
请输入闹铃时间（时 分）  ：2 6
请输入计时时长（分 秒）  ：2 15
02:05:03		//（这里在相同的位置显示从2时5分3秒到2时7分18秒）
			//(其中，在02:06:00到02:06:59期间，增加声音“嘀嘀嘀......”	)
计时结束，还要继续吗（Y/N）？Y
……..					//（以上过程重复）
计时结束，还要继续吗（Y/N）？N
Press any key to continue
(5) 本程序请使用多文件组织
clock.h   clock.cpp
alarm.h   alarm.cpp
main.cpp
(6)编程提示：
  （a）字符'\7' ('\a'响铃)可以让计算机发出“嘀”声，例如：
cout << '\7' << '\7' << '\7';    

（b）字符’\r’ (回车)可以控制输出的内容在同样的位置
函数“Sleep()”可以让程序暂停，参见以下代码
	#include <iostream>
#include <windows.h>
using namespace std;
int main()
{	for(int i=0;i<10;i++)
	{	cout<<i<<"    "<<'\r';
		Sleep(1000);
	}
	return 0;
}
(c)设置输出格式的相关操作:
setw(int)可以设置输出内容的宽度;
setfill(char)可以设置前导符号;
这些格式设置操作的使用要求包含头文件<iomanip>
例：
char s[5]=”abc”;
cout<<setw(10)<<setfill('%')<<s<<endl;
将输出：
%%%%%%%abc

